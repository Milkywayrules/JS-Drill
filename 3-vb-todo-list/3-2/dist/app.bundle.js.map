{"version":3,"sources":["webpack://3-vb-todo-list/./src/env.js","webpack://3-vb-todo-list/./src/components/SingleCard.js","webpack://3-vb-todo-list/./src/utils/SwalToast.js","webpack://3-vb-todo-list/./src/utils/LocalStorageUtils.js","webpack://3-vb-todo-list/./src/utils/SwalAlert.js","webpack://3-vb-todo-list/./src/utils/CardUtils.js","webpack://3-vb-todo-list/./src/utils/ToggleDarkMode.js","webpack://3-vb-todo-list/./src/service-worker.js","webpack://3-vb-todo-list/./src/app.js","webpack://3-vb-todo-list/./src/favicon.js","webpack://3-vb-todo-list/webpack/bootstrap","webpack://3-vb-todo-list/webpack/runtime/chunk loaded","webpack://3-vb-todo-list/webpack/runtime/compat get default export","webpack://3-vb-todo-list/webpack/runtime/define property getters","webpack://3-vb-todo-list/webpack/runtime/hasOwnProperty shorthand","webpack://3-vb-todo-list/webpack/runtime/jsonp chunk loading","webpack://3-vb-todo-list/webpack/startup"],"names":["ENV","DB_KEYNAME","DB_DARKMODEKEYNAME","checkOrCrossBtn","cardID","cardStatus","greenClass","redClass","checkSVG","crossSVG","checkOrCross","injectedSVG","injectedClass","SingleCard","todoText","textDoneClass","textNotDoneClass","textDoneOrNot","bottomDoneClass","bottomNotDoneClass","bottomDoneOrNot","substr","fullBtnToast","confirmButtonText","anyCustomClass","timer","position","baseBtn","greenBtn","blueBtn","yellowBtn","redBtn","pinkBtn","indigoBtn","confirmButtonStyle","opts","showCloseButton","toast","showConfirmButton","buttonsStyling","customClass","confirmButton","timerProgressBar","didOpen","addEventListener","Swal","basicToast","title","iconType","fire","icon","boilerplateToast","toastType","toastRole","dataToUndo","optsDefault","then","toastStatus","isConfirmed","undoClearAllTodosCallback","location","reload","successToast","infoToast","warningToast","questionToast","dangerToast","primaryToast","secondaryToast","undoConfirmToast","optsArgs","localStorage","setItem","JSON","stringify","setTimeout","e","console","error","getStorageTodo","id","myTodoLists","parse","getItem","myTodo","find","todo","ID","setStorageTodo","value","key","isSuccess","log","err","msg","Error","updateTodoLocStorage","todoID","data","text","status","dataDefault","newTodoLists","map","rowTodo","deleteTodoLocStorage","filter","inputText","thenOpts","input","inputAttributes","autocapitalize","showCancelButton","thenOptsDefault","cancelButton","result","parseInt","editTodo","document","getElementById","innerText","swalToast","warn","inputText2","createCardHTML","cardsWrapper","insertAdjacentHTML","cardTodoTextEl","createTextNode","appendChild","cardWrapperOuter","assignCardListener","arrayOfCards","forEach","dataset","_","cardWrapper","children","textWrapper","modifyWrapper","editBtn","deleteBtn","cardBottom","focusTimestamp","Date","now","classList","replace","remove","add","onclick","clickTimestamp","blur","statusTodo","innerHTML","swalAlert","undoDeleteMyTodoLists","event","setDarkLightMode","isDarkMode","htmlClassList","querySelector","getDarkLightMode","jsDrillTodoListDarkModeKey","navigator","window","serviceWorker","register","registerRoute","request","destination","StaleWhileRevalidate","cacheName","deleteAllTodosBtn","toggleDarkMode","inputForm","inputBox","inputBtn","todoListContainerTitle","myTodoList","alert","removeItem","onsubmit","preventDefault","toSave","Math","random","trim","focus","click","disabled","localStorageTodo","maxTodos","length","htmlTemplate","getElementsByTagName"],"mappings":"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,CAEsB,WAFtB,EAEmCoE,YAFnC;AAGC,CAhCD,I;;;;;;UCFA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,8BAA8B,wCAAwC;WACtE;WACA;WACA;WACA;WACA,gBAAgB,qBAAqB;WACrC;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,IAAI;WACJ;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,E;;;;;WC1BA;WACA;WACA;WACA;WACA;WACA,gCAAgC,YAAY;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,oBAAoB;WAC1B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA,4G;;;;;UC9CA;UACA;UACA;UACA;UACA","file":"app.bundle.js","sourcesContent":["export const ENV = {\r\n  DB_KEYNAME: \"myTodoList\",\r\n  DB_DARKMODEKEYNAME: \"jsDrillTodoListDarkMode\"\r\n}","/**\r\n * \r\n * @param {*} cardID \r\n * @param {*} cardStatus \r\n * @returns \r\n */\r\nconst checkOrCrossBtn = (cardID, cardStatus) => {\r\n  // green for check button\r\n  let greenClass = \" bg-green-100 border-green-300 hover:bg-green-200 lg:bg-green-50 lg:hover:bg-green-100 active:bg-green-200 \"\r\n  // red for cross button\r\n  let redClass = \" bg-red-100 border-red-300 hover:bg-red-200 lg:bg-red-50 lg:hover:bg-red-100 active:bg-red-200 \"\r\n\r\n  // checkSVG for check button\r\n  let checkSVG = `\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"mt-1 h-5 w-5 mx-auto text-green-700\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\r\n    </svg>\r\n  `;\r\n  // crossSVG for cross button\r\n  let crossSVG = `\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"mt-1 h-5 w-5 mx-auto text-red-700\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n    </svg>\r\n  `;\r\n  \r\n  // \r\n  const checkOrCross = cardStatus ? \"Cross undone button\" : \"Check done button\"\r\n  const injectedSVG = cardStatus ? crossSVG : checkSVG\r\n  const injectedClass = cardStatus ? redClass : greenClass\r\n\r\n  return `\r\n      <div \r\n        class=\"\r\n          flex\r\n          w-full\r\n          py-2\r\n          items-center\r\n          shadow-inner\r\n          border-b-2\r\n          lg:w-2/12 lg:w-1/12 lg:py-6 lg:rounded-r lg:border-b-0 lg:border-l-4\r\n          ${injectedClass}\r\n        \"\r\n        title=\"${checkOrCross} - (ID:${cardID})\"\r\n        >\r\n        ${injectedSVG}\r\n      </div>\r\n  `;\r\n}\r\n\r\n/**\r\n * \r\n * Single card HTML for to-do list.\r\n * \r\n * @param {Object} param0 CardID, to-do status, to-do text\r\n * @returns HTML template string\r\n */\r\nconst SingleCard = ({ cardID, cardStatus, todoText }) => {\r\n\r\n  const textDoneClass = \"line-through bg-gray-500 focus:bg-gray-200 dark:bg-gray-600 dark:focus:bg-gray-400\"\r\n  const textNotDoneClass = \"not-line-through bg-white focus:bg-white dark:bg-gray-50 dark:focus:bg-white\"\r\n  const textDoneOrNot = cardStatus ? textDoneClass : textNotDoneClass // if true (done) show textDoneClass\r\n\r\n  const bottomDoneClass = \"bg-gray-600 dark:bg-gray-700\"\r\n  const bottomNotDoneClass = \"bg-gray-300 dark:bg-gray-400\"\r\n  const bottomDoneOrNot = cardStatus ? bottomDoneClass : bottomNotDoneClass // if true (done) show bottomDoneClass\r\n\r\n  return `\r\n    <!-- card-wrapper -->\r\n    <div\r\n      id=\"${cardID}-cardWrapperOuter\"\r\n      data-id=\"${cardID}\"\r\n      data-status=\"${cardStatus}\"\r\n      class=\"flex flex-col drop-shadow-lg hover:drop-shadow-xl\"\r\n    >\r\n      <button\r\n        id=\"${cardID}-cardWrapper\"\r\n        class=\"\r\n          rounded\r\n          z-10\r\n          ring-indigo-300\r\n          focus:ring-4\r\n          focus:shadow-xl\r\n          dark:focus:ring-4\r\n          dark:focus:ring-indigo-300\r\n          dark:focus:ring-offset-2\r\n          dark:focus:ring-offset-indigo-900\r\n          ${textDoneOrNot}\r\n        \"\r\n        title=\"#${cardID} ~ ${todoText.substr(0, 200)}\"\r\n      >\r\n        <div id=\"${cardID}-textWrapper\" class=\"flex flex-col lg:flex-row\">\r\n          <p\r\n            id=\"${cardID}-text\"\r\n            class=\"w-full px-5 py-6 text-left text-gray-900 lg:w-11/12\"\r\n          >\r\n            --- Auto-generated temporary To-do. ---\r\n          </p>\r\n          <!-- checkOrCross done btn -->\r\n          <div id=\"${cardID}-checkOrCross\" class=\"hidden\">\r\n            ${checkOrCrossBtn(cardID, cardStatus)}\r\n          </div>\r\n          <!-- /checkOrCross done btn -->\r\n        </div>\r\n    \r\n        <div id=\"${cardID}-modifyWrapper\" class=\"flex text-center z-10 hidden\">\r\n          <!-- edit btn -->\r\n          <div\r\n            id=\"${cardID}-edit\"\r\n            class=\"\r\n              w-1/2\r\n              py-2\r\n              rounded-bl\r\n              bg-gray-100\r\n              hover:bg-indigo-200\r\n              active:bg-indigo-200\r\n              shadow-inner\r\n              dark:bg-gray-300\r\n              dark:hover:bg-indigo-200\r\n            \"\r\n            title=\"Edit to-do button (ID:${cardID})\"\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              class=\"h-4 w-4 mx-auto text-indigo-700\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n                stroke-width=\"2\"\r\n                d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <!-- /edit btn -->\r\n    \r\n          <!-- delete btn -->\r\n          <div\r\n            id=\"${cardID}-delete\"\r\n            class=\"\r\n              w-1/2\r\n              py-2\r\n              rounded-br\r\n              bg-gray-100\r\n              hover:bg-red-200\r\n              active:bg-red-200\r\n              shadow-inner\r\n              dark:bg-gray-300\r\n              dark:hover:bg-red-200\r\n            \"\r\n            title=\"Delete to-do button (ID:${cardID})\"\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              class=\"h-4 w-4 mx-auto text-red-700 dark:text-red-500\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n                stroke-width=\"2\"\r\n                d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <!-- /delete btn -->\r\n        </div>\r\n      </button>\r\n      <div\r\n        id=\"${cardID}-cardBottom\"\r\n        class=\"h-6 mx-2 z-0 -translate-y-4 rounded ${bottomDoneOrNot}\"\r\n      ></div>\r\n    </div>\r\n    <!-- /card-wrapper -->  \r\n  `;\r\n};\r\n\r\n\r\nexport { SingleCard, checkOrCrossBtn }","import Swal from \"sweetalert2\";\r\n\r\n/**\r\n * \r\n * \r\n * \r\n * @param {*} confirmButtonText \r\n * @param {*} anyCustomClass \r\n * @param {*} timer \r\n * @param {*} position \r\n * @returns \r\n * \r\n */\r\nconst fullBtnToast = ({\r\n  confirmButtonText,\r\n  anyCustomClass = 'default',\r\n  timer = 3000,\r\n  position = \"top-end\",\r\n}) => {\r\n  // set base styling for all button, then apply to specific style button.\r\n  const baseBtn = \"w-full mx-auto py-1 px-4 rounded font-bold\";\r\n  const greenBtn = `${baseBtn} text-green-700 bg-green-100 hover:bg-green-300 ring-green-600 focus:ring-4`;\r\n  const blueBtn = `${baseBtn} text-blue-700 bg-blue-100 hover:bg-blue-300 ring-blue-600 focus:ring-4`;\r\n  const yellowBtn = `${baseBtn} text-yellow-700 bg-yellow-100 hover:bg-yellow-300 ring-yellow-600 focus:ring-4`;\r\n  const redBtn = `${baseBtn} text-red-700 bg-red-100 hover:bg-red-300 ring-red-600 focus:ring-4`;\r\n  const pinkBtn = `${baseBtn} text-pink-700 bg-pink-100 hover:bg-pink-300 ring-pink-600 focus:ring-4`;\r\n  const indigoBtn = `${baseBtn} text-indigo-700 bg-indigo-100 hover:bg-indigo-300 ring-indigo-600 focus:ring-4`;\r\n\r\n  // initialize confirmButtonStyle\r\n  let confirmButtonStyle\r\n\r\n  // kalo gaada parameter untuk customClass.confirmButton, pake kelas custom. (DEFAULT)\r\n  if (anyCustomClass == 'default') confirmButtonStyle = greenBtn\r\n  else if (anyCustomClass == 'green' || anyCustomClass == 'success') confirmButtonStyle = greenBtn\r\n  else if (anyCustomClass == 'blue' || anyCustomClass == 'info') confirmButtonStyle = blueBtn\r\n  else if (anyCustomClass == 'yellow' || anyCustomClass == 'warning') confirmButtonStyle = yellowBtn\r\n  else if (anyCustomClass == 'red' || anyCustomClass == 'danger') confirmButtonStyle = redBtn\r\n  else if (anyCustomClass == 'pink' || anyCustomClass == 'primary') confirmButtonStyle = pinkBtn\r\n  else if (anyCustomClass == 'indigo' || anyCustomClass == 'secondary') confirmButtonStyle = indigoBtn\r\n  else if (anyCustomClass == 'undoConfirm') confirmButtonStyle = yellowBtn\r\n  else confirmButtonStyle = pinkBtn\r\n\r\n  // default options\r\n  const opts = {\r\n    showCloseButton: true,\r\n    toast: true,\r\n    position: position, // 'top', 'top-start', 'top-end', 'center', 'center-start', 'center-end', 'bottom', 'bottom-start', or 'bottom-end'.\r\n    showConfirmButton: true, // always true, bcs this is fullBtnToast ~_~\r\n    confirmButtonText: confirmButtonText,\r\n    buttonsStyling: false, // always false, always need custom style to override the default\r\n    customClass: {\r\n      confirmButton: confirmButtonStyle\r\n    },\r\n    timer: timer,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener('mouseenter', Swal.stopTimer)\r\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n    }\r\n  }\r\n\r\n  return Swal.mixin(opts);\r\n};\r\n\r\n/**\r\n *\r\n * @param {*} title\r\n * @param {*} iconType\r\n */\r\nconst basicToast = (title, iconType) => {\r\n  Swal.mixin({\r\n    showCloseButton: true,\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  }).fire({\r\n    icon: iconType,\r\n    title: title,\r\n  });\r\n};\r\n\r\n/**\r\n * \r\n * @param {*} param0 \r\n */\r\nfunction boilerplateToast({ iconType, title, toastType, opts}, toastRole = null, dataToUndo = null) {\r\n  // choose wheter \"basic w/o button\" or go for \"full button\"\r\n  if (toastType == \"basic\") {\r\n    basicToast(title, iconType);\r\n  } else if (toastType == \"fullBtn\") {\r\n    // default opts value\r\n    const optsDefault = { anyCustomClass: 'default', timer: 5000, position: \"top-end\" }\r\n    opts = { ...optsDefault, ...opts }\r\n\r\n    // \r\n    return fullBtnToast(opts)\r\n      .fire({\r\n        icon: iconType,\r\n        title: title,\r\n      })\r\n      .then((toastStatus) => {\r\n        // \r\n        if (toastStatus.isConfirmed == true) {\r\n          // \r\n          if (toastRole == \"undo\" && dataToUndo != null) {\r\n            return undoClearAllTodosCallback(dataToUndo)\r\n          } else if (toastRole == \"refreshPage\") {\r\n            return location.reload()\r\n          }\r\n        }\r\n      })\r\n      // we can use .then here\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * \r\n * success toast with \"basic w/o button\" or go for \"full button\".\r\n * \r\n * @param {Object} param0 title, toastType, opts = {confirmButtonText, anyCustomClass}\r\n */\r\nconst successToast = ({ title, toastType = \"basic\", opts = {confirmButtonText: \"OK\", anyCustomClass: \"success\"} }) => {\r\n  // Fill all the params then boilerplateToast() will decide it for you\r\n  boilerplateToast({ iconType: \"success\", title, toastType, opts })\r\n};\r\n\r\n/**\r\n * \r\n * info toast with \"basic w/o button\" or go for \"full button\".\r\n * \r\n * @param {Object} param0 title, toastType, opts = {confirmButtonText, anyCustomClass}\r\n */\r\nconst infoToast = ({ title, toastType = \"basic\", opts = {confirmButtonText: \"OK\", anyCustomClass: \"info\"} }) => {\r\n  const optsDefault = {confirmButtonText: \"OK\", anyCustomClass: \"info\"}\r\n  opts = { ...optsDefault, ...opts }\r\n\r\n  // Fill all the params then boilerplateToast() will decide it for you\r\n  boilerplateToast({ iconType: \"info\", title, toastType, opts }, \"refreshPage\")\r\n};\r\n\r\n/**\r\n * \r\n * warning toast with \"basic w/o button\" or go for \"full button\".\r\n * \r\n * @param {Object} param0 title, toastType, opts = {confirmButtonText, anyCustomClass}\r\n */\r\nconst warningToast = ({ title, toastType = \"basic\", opts = {confirmButtonText: \"OK\", anyCustomClass: \"warning\"} }) => {\r\n  // Fill all the params then boilerplateToast() will decide it for you\r\n  boilerplateToast({ iconType: \"warning\", title, toastType, opts })\r\n};\r\n\r\n/**\r\n * \r\n * question toast with \"basic w/o button\" or go for \"full button\".\r\n * \r\n * @param {Object} param0 title, toastType, opts = {confirmButtonText, anyCustomClass}\r\n */\r\nconst questionToast = ({ title, toastType = \"basic\", opts = {confirmButtonText: \"OK\", anyCustomClass: \"question\"} }) => {\r\n  // Fill all the params then boilerplateToast() will decide it for you\r\n  boilerplateToast({ iconType: \"question\", title, toastType, opts })\r\n};\r\n\r\n/**\r\n * \r\n * danger toast with \"basic w/o button\" or go for \"full button\".\r\n * \r\n * @param {Object} param0 title, toastType, opts = {confirmButtonText, anyCustomClass}\r\n */\r\nconst dangerToast = ({ title, toastType = \"basic\", opts = {confirmButtonText: \"OK\", anyCustomClass: \"danger\"} }) => {\r\n  // Fill all the params then boilerplateToast() will decide it for you\r\n  boilerplateToast({ iconType: \"error\", title, toastType, opts })\r\n};\r\n\r\n/**\r\n * \r\n * primary toast with \"basic w/o button\" or go for \"full button\".\r\n * \r\n * @param {Object} param0 title, toastType, opts = {confirmButtonText, anyCustomClass}\r\n */\r\nconst primaryToast = ({ title, toastType = \"basic\", opts = {confirmButtonText: \"OK\", anyCustomClass: \"primary\"} }) => {\r\n  // Fill all the params then boilerplateToast() will decide it for you\r\n  boilerplateToast({ iconType: \"primary\", title, toastType, opts })\r\n};\r\n\r\n/**\r\n * \r\n * secondary toast with \"basic w/o button\" or go for \"full button\".\r\n * \r\n * @param {Object} param0 title, toastType, opts = {confirmButtonText, anyCustomClass}\r\n */\r\nconst secondaryToast = ({ title, toastType = \"basic\", opts = {confirmButtonText: \"OK\", anyCustomClass: \"secondary\"} }) => {\r\n  // Fill all the params then boilerplateToast() will decide it for you\r\n  boilerplateToast({ iconType: \"secondary\", title, toastType, opts })\r\n};\r\n\r\n/**\r\n * \r\n * undoConfirm toast with \"basic w/o button\" or go for \"full button\".\r\n * \r\n * @param {Object} param0 title, toastType, opts = {confirmButtonText, anyCustomClass}\r\n */\r\nconst undoConfirmToast = ({ title, toastType = \"fullBtn\", opts: optsArgs = {confirmButtonText: \"Undo\", anyCustomClass: \"undoConfirm\"} }, dataToUndo) => {\r\n  // whether the params are supplied or not, the default value will remain\r\n  const optsDefault = {confirmButtonText: \"Undo\", anyCustomClass: \"undoConfirm\"}\r\n  const opts = {...optsDefault, ...optsArgs}\r\n  // Fill all the params then boilerplateToast() will decide it for you\r\n  var toastRole = \"undo\"\r\n\r\n  boilerplateToast({ iconType: \"success\", title, toastType, opts }, toastRole, dataToUndo)\r\n};\r\n\r\n\r\n/**\r\n * \r\n * Using Memento pattern for undo the clear all todos.\r\n * see ref: https://stackoverflow.com/questions/54416318/how-to-make-a-undo-redo-function#answer-54416376\r\n * \r\n * @param {*} dataToUndo \r\n * @returns \r\n */\r\nexport function undoClearAllTodosCallback(dataToUndo) {\r\n  try {\r\n    // undoDeleteMyTodoLists\r\n    localStorage.setItem(\"myTodoList\", JSON.stringify(dataToUndo))\r\n\r\n    infoToast({\r\n      title: \"Your data is back! Please refresh the page.\",\r\n      toastType: \"fullBtn\",\r\n      opts: { confirmButtonText: \"Refresh now\" }\r\n    })\r\n\r\n    setTimeout(() => {\r\n      location.reload()\r\n    }, 5000);\r\n\r\n    return 'true'\r\n  } catch (e) {\r\n    console.error(e);\r\n    return 'false'\r\n  }\r\n}\r\n\r\n\r\n\r\nexport {\r\n  successToast,\r\n  infoToast,\r\n  dangerToast,\r\n  warningToast,\r\n  questionToast,\r\n  primaryToast,\r\n  secondaryToast,\r\n  undoConfirmToast\r\n};\r\n","import { ENV } from \"../env.js\";\r\nimport { warningToast } from \"./SwalToast.js\";\r\n\r\n/**\r\n *\r\n * @param {number} id Must be a number type.\r\n * @returns\r\n */\r\nfunction getStorageTodo(id = null) {\r\n  if (id) {\r\n    const myTodoLists = JSON.parse(localStorage.getItem(ENV.DB_KEYNAME));\r\n    const myTodo = myTodoLists.find((todo) => todo.ID === id);\r\n\r\n    return { myTodo, myTodoLists };\r\n  } else {\r\n    return JSON.parse(localStorage.getItem(ENV.DB_KEYNAME));\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} value\r\n * @param {*} key\r\n * @returns\r\n */\r\nfunction setStorageTodo(value = null, key = ENV.DB_KEYNAME) {\r\n  try {\r\n    if (value) {\r\n      if (typeof value === \"string\") {\r\n        localStorage.setItem(key, value);\r\n        return { isSuccess: true };\r\n      } else if (typeof value === \"boolean\") {\r\n        console.log(\"masuk\");\r\n      } else {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n        return { isSuccess: true };\r\n      }\r\n    }\r\n  } catch (err) {\r\n    const msg = \"set storage for todo failed.\";\r\n    console.error(new Error(msg));\r\n    warningToast({ title: msg });\r\n  }\r\n}\r\n\r\nfunction updateTodoLocStorage(\r\n  todoID = null,\r\n  data = { ID: null, text: null, status: null }\r\n) {\r\n  // default value to override with the input obj\r\n  const dataDefault = { ID: null, text: null, status: null };\r\n  data = { ...dataDefault, ...data };\r\n\r\n  // get specific todo item from localStorage and get all todos too\r\n  const { myTodo, myTodoLists } = getStorageTodo(todoID);\r\n\r\n  //\r\n  const newTodoLists = myTodoLists.map((rowTodo) => {\r\n    if (rowTodo.ID === myTodo.ID) {\r\n      // keys are only 3: ID, text, and status. We never change the ID, so we change only these 2.\r\n      rowTodo.text = data.text;\r\n      rowTodo.status = data.status;\r\n    }\r\n    return rowTodo;\r\n  });\r\n\r\n  //\r\n  if (setStorageTodo(newTodoLists).isSuccess) {\r\n    return { isSuccess: true };\r\n  } else {\r\n    return { isSuccess: false };\r\n  }\r\n}\r\n\r\nfunction deleteTodoLocStorage(todoID = null) {\r\n  // get specific todo item from localStorage and get all todos too\r\n  const { myTodo, myTodoLists } = getStorageTodo(todoID);\r\n\r\n  //\r\n  const newTodoLists = myTodoLists.filter((rowTodo) => {\r\n    if (rowTodo.ID !== myTodo.ID) {\r\n      return rowTodo;\r\n    }\r\n  });\r\n\r\n  //\r\n  if (setStorageTodo(newTodoLists).isSuccess) {\r\n    return { isSuccess: true };\r\n  } else {\r\n    return { isSuccess: false };\r\n  }\r\n}\r\n\r\nexport {\r\n  getStorageTodo,\r\n  setStorageTodo,\r\n  updateTodoLocStorage,\r\n  deleteTodoLocStorage,\r\n};\r\n","import { getStorageTodo, updateTodoLocStorage } from \"./LocalStorageUtils.js\"\r\n\r\nimport Swal from \"sweetalert2\";\r\nimport * as swalToast from \"./SwalToast.js\";\r\n\r\n/**\r\n * \r\n * @param {*} param0 \r\n * @returns \r\n */\r\nfunction inputText({\r\n  title,\r\n  opts = { confirmButtonText: \"Save\" },\r\n  thenOpts = { title: \"Input success\", toastType: \"basic\" },\r\n}) {\r\n  // \r\n  const optsDefault = {\r\n    input: \"text\",\r\n    inputAttributes: {\r\n      autocapitalize: \"off\",\r\n    },\r\n    showCancelButton: true,\r\n    confirmButtonText: \"Save\",\r\n  };\r\n  opts = { ...optsDefault, ...opts };\r\n\r\n  // \r\n  const thenOptsDefault = { title: \"Input success\", toastType: \"basic\" };\r\n  thenOpts = { ...thenOptsDefault, ...thenOpts };\r\n\r\n  // \r\n  return Swal.fire({\r\n    title: title,\r\n    input: opts.input,\r\n    inputAttributes: {\r\n      autocapitalize: opts.inputAttributes.autocapitalize,\r\n    },\r\n    showCancelButton: opts.showCancelButton,\r\n    confirmButtonText: opts.confirmButtonText,\r\n    buttonsStyling: false,\r\n    customClass: {\r\n      confirmButton: \"mr-2 py-2 px-5 rounded font-bold text-indigo-700 bg-indigo-100 hover:bg-indigo-300 focus:ring-4 ring-indigo-600\",\r\n      cancelButton: \"mr-2 py-2 px-5 rounded font-bold text-gray-700 bg-gray-100 hover:bg-gray-300 focus:ring-4 ring-gray-600\"\r\n    }\r\n  })\r\n    .then((result) => {\r\n      if (result.isConfirmed) {\r\n        if (!!result.value) {\r\n          const { myTodo: editTodo, myTodoLists } = getStorageTodo(parseInt(thenOpts.cardID))\r\n\r\n          editTodo.text = result.value\r\n\r\n          if (updateTodoLocStorage(thenOpts.cardID, editTodo).isSuccess) {\r\n            document.getElementById(`${thenOpts.cardID}-text`).innerText = result.value\r\n            swalToast.successToast({\r\n              title: thenOpts.title,\r\n              toastType: thenOpts.toastType,\r\n            });\r\n          }\r\n        } else {\r\n          throw \"Input text is empty.\";\r\n        }\r\n        // another if here\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.warn(new Error(err));\r\n      swalToast.warningToast({\r\n        title: err,\r\n      })\r\n    });\r\n}\r\n\r\n/**\r\n * \r\n * @param {*} param0 \r\n * @returns \r\n */\r\n function inputText2({\r\n  title,\r\n  opts = { confirmButtonText: \"Save\" },\r\n  thenOpts = { title: \"Input success\", toastType: \"basic\" },\r\n}) {\r\n  // \r\n  const optsDefault = {\r\n    input: \"text\",\r\n    inputAttributes: {\r\n      autocapitalize: \"off\",\r\n    },\r\n    showCancelButton: true,\r\n    confirmButtonText: \"Save\",\r\n  };\r\n  opts = { ...optsDefault, ...opts };\r\n\r\n  // \r\n  const thenOptsDefault = { title: \"Input success\", toastType: \"basic\" };\r\n  thenOpts = { ...thenOptsDefault, ...thenOpts };\r\n\r\n  // \r\n  return Swal.fire({\r\n    title: title,\r\n    input: opts.input,\r\n    inputAttributes: {\r\n      autocapitalize: opts.inputAttributes.autocapitalize,\r\n    },\r\n    showCancelButton: opts.showCancelButton,\r\n    confirmButtonText: opts.confirmButtonText,\r\n  })\r\n    .then((result) => {\r\n      if (result.isConfirmed) {\r\n        if (!!result.value) {\r\n          if (updateTodoLocStorage(thenOpts.cardID, { text: result.value }).isSuccess) {\r\n            document.getElementById(`${thenOpts.cardID}-text`).innerText = result.value\r\n            swalToast.successToast({\r\n              title: thenOpts.title,\r\n              toastType: thenOpts.toastType,\r\n            });\r\n          }\r\n        } else {\r\n          throw \"Input text is empty.\";\r\n        }\r\n        // another if here\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.warn(new Error(err));\r\n      swalToast.warningToast({\r\n        title: err,\r\n      })\r\n    });\r\n}\r\n\r\nexport { inputText };\r\n","import { ENV } from \"../env.js\";\r\nimport { checkOrCrossBtn, SingleCard } from \"../components/SingleCard.js\";\r\nimport { getStorageTodo, deleteTodoLocStorage, updateTodoLocStorage } from \"./LocalStorageUtils.js\";\r\n\r\nimport Swal from \"sweetalert2\";\r\nimport * as swalToast from \"./SwalToast.js\";\r\nimport * as swalAlert from \"./SwalAlert.js\";\r\n\r\n/**\r\n * \r\n * Create HTML element and render it to the very top of cards-wrapper,\r\n * with ID and to-do text as a params.\r\n * \r\n * Return an object contain cardID and cardWrapperOuter\r\n * \r\n * @param {Object} param0 contains cardID and to-do text\r\n * @returns { cardID, cardWrapperOuter }\r\n */\r\n function createCardHTML({ cardsWrapper, cardID, cardStatus, todoText }) {\r\n  //  create card html without to-do text\r\n  cardsWrapper.insertAdjacentHTML(\"afterbegin\", SingleCard({ cardID, cardStatus, todoText }))\r\n  // get to-do text element <p></p>\r\n  const cardTodoTextEl = document.getElementById(`${cardID}-text`)\r\n  // set innerText of to-do\r\n  todoText = document.createTextNode(todoText)\r\n  cardTodoTextEl.innerText = null\r\n  cardTodoTextEl.appendChild(todoText)\r\n  // get CWO for export\r\n  const cardWrapperOuter = document.getElementById(`${cardID}-cardWrapperOuter`)\r\n\r\n  return {\r\n    cardID,\r\n    cardWrapperOuter\r\n   }\r\n}\r\n// end of createCardHTML\r\n\r\n/**\r\n * altho we can do this to add listener to every single card from it's parent (cardsWrapper)\r\n * see ref: https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#event_delegation\r\n *\r\n *\r\n *| cardsWrapper.addEventListener(\"focusin\", () => {\r\n *|   console.log('cardWrapper: focus in');\r\n *| })\r\n *| cardsWrapper.addEventListener(\"focusout\", () => {\r\n *|   console.log('cardWrapper: focus out');\r\n *| })\r\n *\r\n * we do add listeners while loop for every single array and add another utils inside them\r\n */\r\n/**\r\n * \r\n * Contains all children element on the cards-wrapper (allCardsWrapper).\r\n * Then loop the array trough every single one of them (single to-do card).\r\n * \r\n * Control every single card behaviour here. e.g. eventListener\r\n * \r\n * @param {Array} arrayOfCards Contains all children element on the cards-wrapper (allCardsWrapper)\r\n */\r\n function assignCardListener(arrayOfCards) { // yg masuk array dari card wrapper outer\r\n  arrayOfCards.forEach((cardWrapperOuter) => {\r\n    /**\r\n     * \r\n     */\r\n    // set cardID from data-id on #{id}-cardWrapperOuter element\r\n    const cardID = cardWrapperOuter.dataset.id;\r\n    // initialize empty object const\r\n    const _ = {};\r\n    // 1 - cardWrapper holds 2 children: textWrapper and modifyWrapper -> btn\r\n    _.cardWrapper = cardWrapperOuter.children[`${cardID}-cardWrapper`];\r\n      // 1.1 - textWrapper holds 2 children: text and check btn\r\n      _.textWrapper = _.cardWrapper.children[`${cardID}-textWrapper`];\r\n        // 1.1.1 - this is the actual text content\r\n        _.todoText = _.textWrapper.children[`${cardID}-text`];\r\n        // 1.1.2 - this is the check btn (green) -> btn-like\r\n        _.checkOrCrossBtn = _.textWrapper.children[`${cardID}-checkOrCross`];\r\n      // 1.2 - modifyWrapper holds 2 children: edit btn and delete btn\r\n      _.modifyWrapper = _.cardWrapper.children[`${cardID}-modifyWrapper`];\r\n        // 1.2.1 - this is the edit btn (indigo) -> btn-like\r\n        _.editBtn = _.modifyWrapper.children[`${cardID}-edit`];\r\n        // 1.2.2 - this is the delete btn (red) -> btn-like\r\n        _.deleteBtn = _.modifyWrapper.children[`${cardID}-delete`];\r\n    // 2 - cardBottom don't have any child, only for accent below every card\r\n    _.cardBottom = cardWrapperOuter.children[`${cardID}-cardBottom`];\r\n\r\n    /**\r\n     * \r\n     */\r\n    // when the card is focus, whether clicked or tabbed\r\n    _.cardWrapper.addEventListener(\"focusin\", () => {\r\n      // get current timestamp / 1000 to get more narrow value\r\n      // to see differences between onfocus and onclick.\r\n      const focusTimestamp = parseInt(Date.now()/1000)\r\n      // toggle from hidden to block -> show cardWrapper\r\n      _.checkOrCrossBtn.classList.replace(\"hidden\", \"block\");\r\n      // toggle edit&delete btn wrapper from hidden to show -> show modifyWrapper\r\n      _.modifyWrapper.classList.remove(\"hidden\");\r\n      // toggle card accent on bottom from show to hidden -> hide card bottom accent\r\n      _.cardBottom.classList.add(\"hidden\");\r\n      // add margin bottom 5 to the outer of cardWrapper,\r\n      // so it's stay stay away of each other.\r\n      cardWrapperOuter.classList.add(\"mb-5\");\r\n\r\n      // when the card is clicked, automatically onfocus after onclick.\r\n      // but, onfocus triggered first, then onclick.\r\n      _.cardWrapper.onclick = () => {\r\n        // get current timestamp / 1000 to get more narrow value\r\n        // to see differences between onfocus and onclick\r\n        const clickTimestamp = parseInt(Date.now()/1000)\r\n        // if there is a delay about 1++ second,\r\n        // we assume the user clicking the card again to hide it.\r\n        // but if not, we assume the user clicked the card once,\r\n        // but triggered 2 event (onfocus & onclick).\r\n        if (focusTimestamp != clickTimestamp) {\r\n          // blur = get out focus\r\n          _.cardWrapper.blur()\r\n        }\r\n      };\r\n    });\r\n\r\n    /**\r\n     * when the card is out of focus after being focus.\r\n     */\r\n    _.cardWrapper.addEventListener(\"focusout\", () => {\r\n      // toggle from block to hidden -> hide cardWrapper\r\n      _.checkOrCrossBtn.classList.replace(\"block\", \"hidden\");\r\n      // \r\n      _.modifyWrapper.classList.add(\"hidden\");\r\n      _.cardBottom.classList.remove(\"hidden\");\r\n      cardWrapperOuter.classList.remove(\"mb-5\");\r\n    });\r\n\r\n    /**\r\n     * when CHECK/CROSS btn is clicked\r\n     * CHECK/CROSS status in localStorage reference to done/not state\r\n     */\r\n    _.checkOrCrossBtn.addEventListener(\"click\", () => {\r\n      // \r\n      const { myTodo: statusTodo, myTodoLists } = getStorageTodo(parseInt(cardID))\r\n\r\n      statusTodo.status = !statusTodo.status\r\n\r\n      if (updateTodoLocStorage(parseInt(cardID), statusTodo).isSuccess) {\r\n        _.checkOrCrossBtn.innerHTML = checkOrCrossBtn(cardID, statusTodo.status, false)\r\n\r\n        if (statusTodo.status) { // todo is now done (true)\r\n          swalToast.successToast({ title: `Done: ${statusTodo.text}` })\r\n          _.cardWrapper.classList.replace(\"not-line-through\", \"line-through\")\r\n          _.cardWrapper.classList.replace(\"bg-white\", \"bg-gray-500\")\r\n          _.cardWrapper.classList.replace(\"focus:bg-white\", \"focus:bg-gray-200\")\r\n          _.cardWrapper.classList.replace(\"dark:bg-gray-50\", \"dark:bg-gray-600\")\r\n          _.cardWrapper.classList.replace(\"dark:focus:bg-white\", \"dark:focus:bg-gray-400\")\r\n\r\n          _.cardBottom.classList.replace(\"bg-gray-300\", \"bg-gray-600\")\r\n          _.cardBottom.classList.replace(\"dark:bg-gray-400\", \"dark:bg-gray-700\")\r\n        } else {\r\n          swalToast.infoToast({ title: `Undone: ${statusTodo.text}` })\r\n          _.cardWrapper.classList.replace(\"line-through\", \"not-line-through\")\r\n          _.cardWrapper.classList.replace(\"bg-gray-500\", \"bg-white\")\r\n          _.cardWrapper.classList.replace(\"focus:bg-gray-200\", \"focus:bg-white\")\r\n          _.cardWrapper.classList.replace(\"dark:bg-gray-600\", \"dark:bg-gray-50\")\r\n          _.cardWrapper.classList.replace(\"dark:focus:bg-gray-400\", \"dark:focus:bg-white\")\r\n\r\n          _.cardBottom.classList.replace(\"bg-gray-600\", \"bg-gray-300\")\r\n          _.cardBottom.classList.replace(\"dark:bg-gray-700\", \"dark:bg-gray-400\")\r\n        }\r\n        \r\n      }\r\n\r\n      // \r\n      // swalAlert.inputText({\r\n      //   title: `<small>Edit: <br> <i>${statusTodo.myTodo.text}</i></small>`,\r\n      //   opts: {\r\n      //     input: \"text\",\r\n      //     showCancelButton: true,\r\n      //     confirmButtonText: \"Save\",\r\n      //   },\r\n      //   thenOpts: {\r\n      //     title: \"Update success\",\r\n      //     cardID: parseInt(cardID)\r\n      //   }\r\n      // })\r\n    });\r\n\r\n    /**\r\n     * when edit btn is clicked\r\n     * edit text in localStorage reference to cardID\r\n     */\r\n    _.editBtn.addEventListener(\"click\", () => {\r\n      // \r\n      const editTodo = getStorageTodo(parseInt(cardID))\r\n      // \r\n      swalAlert.inputText({\r\n        title: `<small>Edit: <br> <i>${editTodo.myTodo.text}</i></small>`,\r\n        opts: {\r\n          input: \"text\",\r\n          showCancelButton: true,\r\n          confirmButtonText: \"Save\",\r\n        },\r\n        thenOpts: {\r\n          title: \"Update success\",\r\n          cardID: parseInt(cardID)\r\n        }\r\n      })\r\n    });\r\n\r\n    /**\r\n     * when delete btn is clicked\r\n     * delete data in localStorage reference to cardID\r\n     */\r\n    _.deleteBtn.addEventListener(\"click\", () => {\r\n      // \r\n      const { myTodo, myTodoLists: undoDeleteMyTodoLists} = getStorageTodo(parseInt(cardID))\r\n\r\n      Swal.fire({\r\n        title: `<small> Delete: <br> <i>${myTodo.text}</i> </small>`,\r\n        showCancelButton: true,\r\n        showConfirmButton: true,\r\n        confirmButtonText: `Delete`,\r\n        buttonsStyling: false,\r\n        customClass: {\r\n          confirmButton: \"mr-2 py-2 px-5 rounded font-bold text-red-700 bg-red-100 hover:bg-red-300 focus:ring-4 ring-red-600\",\r\n          cancelButton: \"mr-2 py-2 px-5 rounded font-bold text-gray-700 bg-gray-100 hover:bg-gray-300 focus:ring-4 ring-gray-600\"\r\n        }\r\n      })\r\n      .then((event) => {\r\n        if (event.isConfirmed) {\r\n          // \r\n          if (deleteTodoLocStorage(parseInt(cardID)).isSuccess) {\r\n            document.getElementById(`${cardID}-cardWrapperOuter`).innerHTML = null\r\n            //\r\n            swalToast.undoConfirmToast(\r\n              {\r\n                // success, info, warning, question, danger, primary, secondary\r\n                title: \"Your to-do list(s) have been deleted.\",\r\n                toastType: \"fullBtn\",\r\n                opts: { timer: 10000 },\r\n              },\r\n              undoDeleteMyTodoLists\r\n            );\r\n          }\r\n        }\r\n      })\r\n\r\n\r\n    });\r\n  });\r\n  // End of array of card forEach\r\n}\r\n// end of assignCardListener\r\n\r\nexport { createCardHTML, assignCardListener }","\r\n/**\r\n * \r\n * set darkmode lightmode based on localStorage data\r\n * \r\n * @param {*} isDarkMode \r\n * @returns \r\n */\r\nfunction setDarkLightMode (isDarkMode) {\r\n  const htmlClassList = document.querySelector(\"html\").classList\r\n  // \r\n  if (isDarkMode) htmlClassList.replace(\"light\", \"dark\")\r\n  else htmlClassList.replace(\"dark\", \"light\")\r\n\r\n  return isDarkMode;\r\n}\r\n\r\n/**\r\n * \r\n * @returns \r\n */\r\nfunction getDarkLightMode () {\r\n  // \r\n  let jsDrillTodoListDarkModeKey = \"jsDrillTodoListDarkMode\";\r\n  let isDarkMode;\r\n  // \r\n  if (localStorage.getItem(jsDrillTodoListDarkModeKey)) {\r\n    isDarkMode = localStorage.getItem(\"jsDrillTodoListDarkMode\") === \"true\" ? true : false\r\n    setDarkLightMode(isDarkMode)\r\n\r\n    return isDarkMode\r\n  } else {\r\n    // \r\n    localStorage.setItem(jsDrillTodoListDarkModeKey, \"false\")\r\n    isDarkMode = false\r\n\r\n    return isDarkMode\r\n  }\r\n}\r\n\r\nexport { setDarkLightMode, getDarkLightMode }","import {registerRoute} from 'workbox-routing';\r\nimport {StaleWhileRevalidate} from 'workbox-strategies';\r\n// Check that service workers are supported\r\nif ('serviceWorker' in navigator) {\r\n  // Use the window load event to keep the page load performant\r\n  window.addEventListener('load', () => {\r\n    navigator.serviceWorker.register('/service-worker.js');\r\n  });\r\n  console.log('```````SW');\r\n\r\n\r\n  registerRoute(\r\n    ({request}) => request.destination === 'script' ||\r\n                    request.destination === 'style',\r\n    new StaleWhileRevalidate({\r\n      cacheName: 'static-resources',\r\n    })\r\n  );\r\n}","import { ENV } from \"./env.js\";\r\nimport { createCardHTML, assignCardListener } from \"./utils/CardUtils.js\";\r\nimport { setStorageTodo } from \"./utils/LocalStorageUtils.js\";\r\nimport * as swalToast from \"./utils/SwalToast.js\";\r\n\r\nimport { setDarkLightMode, getDarkLightMode } from \"./utils/ToggleDarkMode.js\"\r\nimport \"./favicon.js\"\r\n\r\nimport \"./service-worker.js\"\r\n\r\nimport \"./style-3.css\"\r\n\r\nlet isDarkMode = getDarkLightMode()\r\n\r\nconst deleteAllTodosBtn = document.getElementById(\"delete-all-todos-btn\");\r\nconst toggleDarkMode = document.getElementById(\"dark-mode-btn\");\r\n//\r\nconst inputForm = document.getElementById(\"input-form\");\r\nconst inputBox = document.getElementById(\"input-box\");\r\nconst inputBtn = document.getElementById(\"input-btn\");\r\n//\r\nconst todoListContainerTitle = document.querySelector(\r\n  \"#todo-list-container h2\"\r\n);\r\n// Contains all children element on the cards-wrapper, then cast Obj to Arr\r\nconst cardsWrapper = document.getElementById(\"cards-wrapper\");\r\n// const arrayOfCards = Array.prototype.slice.call(cardsWrapper.children);\r\n\r\n// get all to-do(s) and render all the to-do(s) list card then assign listener\r\nif (localStorage.getItem(ENV.DB_KEYNAME)) {\r\n  try {\r\n    //\r\n    const myTodoLists = JSON.parse(localStorage.getItem(ENV.DB_KEYNAME));\r\n\r\n    // \r\n    todoListContainerTitle.classList.replace(\"hidden\", \"block\");\r\n    deleteAllTodosBtn.classList.replace(\"hidden\", \"block\");\r\n\r\n    //\r\n    myTodoLists.forEach((myTodoList) => {\r\n      const { cardWrapperOuter } = createCardHTML({\r\n        cardsWrapper,\r\n        cardID: myTodoList.ID,\r\n        cardStatus: myTodoList.status,\r\n        todoText: myTodoList.text,\r\n      });\r\n      assignCardListener([cardWrapperOuter]);\r\n    });\r\n  } catch (e) {\r\n    //\r\n    console.log(e);\r\n    alert(\r\n      \"There was an error with the data. Please clear up your browser local storage. Thank you.\"\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * Delete all to-do list item from localStorage ENV.DB_KEYNAME = \"myTodoList\".\r\n *\r\n */\r\ndeleteAllTodosBtn.onclick = () => {\r\n  // get all to-dos from localStorage to be used in the undo process\r\n  const undoDeleteMyTodoLists = JSON.parse(localStorage.getItem(ENV.DB_KEYNAME));\r\n\r\n  // remove all to-do lists\r\n  localStorage.removeItem(ENV.DB_KEYNAME);\r\n  // set HTML card to empty string\r\n  cardsWrapper.innerHTML = \"\";\r\n  todoListContainerTitle.classList.replace(\"block\", \"hidden\");\r\n  deleteAllTodosBtn.classList.replace(\"block\", \"hidden\");\r\n\r\n  //\r\n  swalToast.undoConfirmToast(\r\n    {\r\n      // success, info, warning, question, danger, primary, secondary\r\n      title: \"Your to-do list(s) have been deleted.\",\r\n      toastType: \"fullBtn\",\r\n      opts: { timer: 10000 },\r\n    },\r\n    undoDeleteMyTodoLists\r\n  );\r\n};\r\n\r\n/**\r\n * disable input box and btn\r\n * replace + with spin animation to btn\r\n * get inputBox.value and now timestamp\r\n * set to-do text, unique id (timestamp), and status (0|1)\r\n * then, when done, replace spin with + again\r\n * then, empty the input box\r\n * then, enable the input box and btn\r\n * last, fire SWAL (or alert)\r\n */\r\n/**\r\n *\r\n *\r\n *\r\n * @param {any} e Event\r\n */\r\ninputForm.onsubmit = (e) => {\r\n  try {\r\n    // prevent the form from submitting the inputBox value.\r\n    // Thus, we can control the behaviour but still with secure form-minded flow.\r\n    e.preventDefault();\r\n\r\n    // initialize toSave object contains key=>value for the to-do list\r\n    const toSave = {};\r\n    // create unique ID from timestamp + 2 digits number\r\n    toSave.ID = Date.now() + ~~(Math.random() * 100);\r\n    // get the to-do value from input box\r\n    toSave.text = inputBox.value.trim();\r\n    // set status false|true ; false = not done yet, true = done\r\n    toSave.status = false;\r\n\r\n    // if the input text is empty, reset again the inputBox then alert user\r\n    if (toSave.text === \"\") {\r\n      inputBox.value = \"\";\r\n      inputBox.focus();\r\n      inputBtn.click();\r\n      throw \"Please fill with appropriate character.\";\r\n    }\r\n\r\n    // disable inputBox and inputBtn so the user cannot do anything while processing the input to-do process\r\n    inputBox.disabled = true;\r\n    inputBtn.disabled = true;\r\n\r\n    // if myTodoList exist getItem and add the new to-do in front of the array\r\n    // if not, straight to setItem\r\n    if (localStorage.getItem(ENV.DB_KEYNAME)) {\r\n      try {\r\n        // get all to-dos from localStorage and parse into valid JSON\r\n        const localStorageTodo = JSON.parse(localStorage.getItem(ENV.DB_KEYNAME));\r\n\r\n        // set max todos to store\r\n        const maxTodos = 100;\r\n        // check todos already in the localStorage not greater than the maxTodos\r\n        if (localStorageTodo.length < maxTodos) {\r\n          // udpate the to-do list with the new one being the last on the array\r\n          setStorageTodo([...localStorageTodo, toSave])\r\n        } else {\r\n          // when the total to-dos on the localStorage have been exceed the maxTodos\r\n          // throw to upper catch\r\n          throw `You already have ${localStorageTodo.length} to-dos active. Please delete some or clear all to-dos. (Max. ${maxTodos} to-dos for the sake of your device's memory goodness)`;\r\n        }\r\n      } catch (e) {\r\n        // throw to upper catch\r\n        throw e;\r\n      }\r\n    } else {\r\n      // when there is no data on the localStorage, immediately create a new localStorage data\r\n      setStorageTodo([toSave])\r\n\r\n      // \r\n      todoListContainerTitle.classList.replace(\"hidden\", \"block\");\r\n      deleteAllTodosBtn.classList.replace(\"hidden\", \"block\");\r\n    }\r\n\r\n    // create card and assign event listener to every components in a single card\r\n    const { cardWrapperOuter } = createCardHTML({\r\n      cardsWrapper,\r\n      cardID: toSave.ID,\r\n      cardStatus: toSave.status,\r\n      todoText: toSave.text,\r\n    });\r\n    assignCardListener([cardWrapperOuter]);\r\n    // show clear all todo lists button\r\n    deleteAllTodosBtn.classList.replace(\"hidden\", \"block\");\r\n\r\n    // reset inputBox to the initial condition\r\n    inputBox.value = \"\";\r\n    inputBox.disabled = false;\r\n    inputBtn.disabled = false;\r\n    inputBox.focus();\r\n  } catch (err) {\r\n    // reset inputBox to the initial condition\r\n    inputBox.value = \"\";\r\n    inputBox.disabled = false;\r\n    inputBtn.disabled = false;\r\n    inputBox.focus();\r\n    // catch all error from child try catch and console then alert the user\r\n    console.error(err);\r\n    swalToast.dangerToast({\r\n      title: err,\r\n      toastType: \"basic\",\r\n    });\r\n  }\r\n};\r\n// End of onSubmit\r\n\r\n/**\r\n * Toggle between dark and light mode. Get user preferences using localStorage item.\r\n */\r\ntoggleDarkMode.onclick = () => {\r\n  isDarkMode = !isDarkMode;\r\n  setDarkLightMode(isDarkMode);\r\n  localStorage.setItem(ENV.DB_DARKMODEKEYNAME, isDarkMode)\r\n};\r\n","// IIFE immedieately invoked function expression\r\n\r\n(function() {\r\n\r\n  const htmlTemplate = `\r\n  <!-- ****** faviconit.com favicons ****** -->\r\n  <!-- ****** mantap betul faviconit ****** -->\r\n  <link rel=\"shortcut icon\" href=\"../assets/icon/favicon.ico\">\r\n  <link rel=\"icon\" sizes=\"16x16 32x32 64x64\" href=\"../assets/icon/favicon.ico\">\r\n  <link rel=\"icon\" type=\"image/png\" sizes=\"196x196\" href=\"../assets/icon/favicon-192.png\">\r\n  <link rel=\"icon\" type=\"image/png\" sizes=\"160x160\" href=\"../assets/icon/favicon-160.png\">\r\n  <link rel=\"icon\" type=\"image/png\" sizes=\"96x96\" href=\"../assets/icon/favicon-96.png\">\r\n  <link rel=\"icon\" type=\"image/png\" sizes=\"64x64\" href=\"../assets/icon/favicon-64.png\">\r\n  <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"../assets/icon/favicon-32.png\">\r\n  <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"../assets/icon/favicon-16.png\">\r\n  <link rel=\"apple-touch-icon\" href=\"../assets/icon/favicon-57.png\">\r\n  <link rel=\"apple-touch-icon\" sizes=\"114x114\" href=\"../assets/icon/favicon-114.png\">\r\n  <link rel=\"apple-touch-icon\" sizes=\"72x72\" href=\"../assets/icon/favicon-72.png\">\r\n  <link rel=\"apple-touch-icon\" sizes=\"144x144\" href=\"../assets/icon/favicon-144.png\">\r\n  <link rel=\"apple-touch-icon\" sizes=\"60x60\" href=\"../assets/icon/favicon-60.png\">\r\n  <link rel=\"apple-touch-icon\" sizes=\"120x120\" href=\"../assets/icon/favicon-120.png\">\r\n  <link rel=\"apple-touch-icon\" sizes=\"76x76\" href=\"../assets/icon/favicon-76.png\">\r\n  <link rel=\"apple-touch-icon\" sizes=\"152x152\" href=\"../assets/icon/favicon-152.png\">\r\n  <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"../assets/icon/favicon-180.png\">\r\n  <meta name=\"msapplication-TileColor\" content=\"#FFFFFF\">\r\n  <meta name=\"msapplication-TileImage\" content=\"../assets/icon/favicon-144.png\">\r\n  <meta name=\"msapplication-config\" content=\"../assets/icon/browserconfig.xml\">\r\n  <!-- ****** mantap betul faviconit ****** -->\r\n  <!-- ****** faviconit.com favicons ****** -->\r\n`\r\n// render favicon into head tag\r\ndocument\r\n  .getElementsByTagName(\"head\")[0]\r\n  .insertAdjacentHTML(\"beforeend\", htmlTemplate);\r\n})();\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tresult = fn();\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_3_vb_todo_list\"] = self[\"webpackChunk_3_vb_todo_list\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [325], () => (__webpack_require__(415)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}